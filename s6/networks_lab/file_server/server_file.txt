#!/usr/bin/env python3
# coding=utf-8
import socket
from threading import Thread

client = socket.socket()
client.connect(("172.16.104.6",8081))

def RecvFromServer():
    while True:
        file = open("./server_file.txt","a+")
        msg = client.recv(1000).decode()
        file.write(msg)
        file.close()
        id = msg[-5:]
        msg = msg[:-5]
        if msg == "Exit":
            print("Client is closing")
            client.close()
        print("\n{}> {}\nClient> ".format(id,msg),end="")

def SendToServer():
    while True:
        msg = input("Client> ")
        sentences = ""
        with open("{}".format(msg),"r+") as file:
            for line in file.readlines():
                sentences += line
        client.send(sentences.encode())

def main():
    print("Client Running...")
    try:
        t1 = Thread(target=RecvFromServer,args=())
        t2 = Thread(target=SendToServer,args=())
        t1.start()
        t2.start()
    except KeyboardInterrupt:
        print("Closing connection...")
        client.close()

if __name__ == "__main__":
    main()
#!/usr/bin/env python3
# coding=utf-8
import socket
from time import sleep
from threading import Thread

all_cl = {}
IP_ADDR = "172.16.104.6"

def Post(owner,msg,client):
    for each in all_cl.keys():
        if each != owner:
            all_cl[each].send(msg.encode())

def Get(server,client,owner):
    while True:
        try:
            c_msg = client.recv(1000)
            c_msg = c_msg.decode()
            if c_msg == "Exit":
                client.close()
                return 0
            if c_msg != None or c_msg != '':
                print("\nClient> {}\nServer> ".format(c_msg))
                Post(owner,c_msg,client)
        except ex:
            print("nothing recevied")


def main():
    server = socket.socket()
    server.bind((IP_ADDR,8081))
    server.listen(5)
    print("Server Running at {}...".format(IP_ADDR))
    while True:
        try:
            client , addr =  server.accept()
            uniq_id = addr[1]
            all_cl[uniq_id] = client
            print("\n{} has joined the chat".format(addr))
            t1 = Thread(target=Get, args=(server,client,uniq_id))
            t1.start()
        except KeyboardInterrupt:
            print("Closing connection...")
            server.close()
            break
    file.close()

if __name__=="__main__":
    main()
#!/usr/bin/env python3
# coding=utf-8
import socket
from time import sleep
from threading import Thread

all_cl = {}
IP_ADDR = "172.16.104.6"

def Post(owner,msg,client):
    for each in all_cl.keys():
        if each != owner:
            all_cl[each].send(msg.encode())

def Get(server,client,owner):
    while True:
        try:
            c_msg = client.recv(1000)
            c_msg = c_msg.decode()
            if c_msg == "Exit":
                client.close()
                return 0
            if c_msg != None or c_msg != '':
                print("\nClient> {}\nServer> ".format(c_msg))
                Post(owner,c_msg,client)
        except ex:
            print("nothing recevied")


def main():
    server = socket.socket()
    server.bind((IP_ADDR,8081))
    server.listen(5)
    print("Server Running at {}...".format(IP_ADDR))
    while True:
        try:
            client , addr =  server.accept()
            uniq_id = addr[1]
            all_cl[uniq_id] = client
            print("\n{} has joined the chat".format(addr))
            t1 = Thread(target=Get, args=(server,client,uniq_id))
            t1.start()
        except KeyboardInterrupt:
            print("Closing connection...")
            server.close()
            break
    file.close()

if __name__=="__main__":
    main()
